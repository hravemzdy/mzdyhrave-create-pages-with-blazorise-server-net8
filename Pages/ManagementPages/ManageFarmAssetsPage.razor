@page "/manage-assets"

@using Blazorise.DataGrid
@using EmployeeManagementApp.Components
@using EmployeeManagementApp.Components.ManageGrid
@using EmployeeManagementApp.Models;



<ManageAssetGrid GItem="WorkerTableModel" Title="Workers" Elements="WorkersElements" FilterFunc="@WorkersFilterFunc" GridColumnSize="ColumnSize.Is10">
    <AssetGridColumns>
        <GridColumn TGItem="WorkerTableModel" Title="Worker Id" Sortable=false Field=@nameof(WorkerTableModel.WorkerId) />
        <GridColumn TGItem="WorkerTableModel" Title="Worker name" Sortable=false Field=@nameof(WorkerTableModel.WorkerName) />
        <GridColumn TGItem="WorkerTableModel" Title="Worker access code" Sortable=false Field=@nameof(WorkerTableModel.WorkerAccessCode) />
        <GridColumn TGItem="WorkerTableModel" Title="Date added" Sortable=false Field=@nameof(WorkerTableModel.DateAdded) />
    </AssetGridColumns>
</ManageAssetGrid>
<ManageAssetForm GItem="WorkerTableModel" FItem="WorkerAddModel" ButtonLabel="ADD" FormColumnSize="ColumnSize.Is6">
    <AssetFormFields>
        <FormField TGItem="WorkerTableModel" TFItem="WorkerAddModel" Label="First name:" Validate=true Field=@nameof(WorkerAddModel.FirstName) />
        <FormField TGItem="WorkerTableModel" TFItem="WorkerAddModel" Label="Last name:" Validate=true Field=@nameof(WorkerAddModel.LastName) />
    </AssetFormFields>
</ManageAssetForm>

<ManageAssetGrid GItem="JobTableModel" Title="Jobs" Elements="JobsElements" FilterFunc="@JobsFilterFunc" GridColumnSize="ColumnSize.Is10">
    <AssetGridColumns>
        <GridColumn TGItem="JobTableModel" Title="Job Id" Sortable=false Field=@nameof(JobTableModel.JobId) />
        <GridColumn TGItem="JobTableModel" Title="Job title" Sortable=false Field=@nameof(JobTableModel.JobTitle) />
        <GridColumn TGItem="JobTableModel" Title="Date added" Sortable=false Field=@nameof(JobTableModel.DateAdded) />
    </AssetGridColumns>
</ManageAssetGrid>
<ManageAssetForm GItem="JobTableModel" FItem="JobAddModel" ButtonLabel="ADD" FormColumnSize="ColumnSize.Is6">
    <AssetFormFields>
        <FormField TGItem="JobTableModel" TFItem="JobAddModel" Label="Job Title:" Validate=true Field=@nameof(JobAddModel.Title) />
    </AssetFormFields>
</ManageAssetForm>

<ManageAssetGrid GItem="BuildingTableModel" Title="Jobs" Elements="BuildingsElements" FilterFunc="@BuildingsFilterFunc" GridColumnSize="ColumnSize.Is10">
    <AssetGridColumns>
        <GridColumn TGItem="BuildingTableModel" Title="Job Id" Sortable=false Field=@nameof(BuildingTableModel.BuildingId) />
        <GridColumn TGItem="BuildingTableModel" Title="Job title" Sortable=false Field=@nameof(BuildingTableModel.BuildingTitle) />
        <GridColumn TGItem="BuildingTableModel" Title="Date added" Sortable=false Field=@nameof(BuildingTableModel.DateAdded) />
    </AssetGridColumns>
</ManageAssetGrid>
<ManageAssetForm GItem="BuildingTableModel" FItem="BuildingAddModel" ButtonLabel="ADD" FormColumnSize="ColumnSize.Is6" FormPadding="Padding.Is5.FromBottom">
    <AssetFormFields>
        <FormField TGItem="BuildingTableModel" TFItem="BuildingAddModel" Label="Building Title:" Validate=true Field=@nameof(BuildingAddModel.Title) />
    </AssetFormFields>
</ManageAssetForm>

@code {
    private bool WorkersFilterFunc(WorkerTableModel element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.WorkerId.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.WorkerName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.WorkerAccessCode.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private bool JobsFilterFunc(JobTableModel element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.JobId.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.JobTitle.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private bool BuildingsFilterFunc(BuildingTableModel element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.BuildingId.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.BuildingTitle.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    
    private IEnumerable<WorkerTableModel> WorkersElements = new List<WorkerTableModel>();

    private IEnumerable<JobTableModel> JobsElements = new List<JobTableModel>();

    private IEnumerable<BuildingTableModel> BuildingsElements = new List<BuildingTableModel>();

    protected override async Task OnInitializedAsync()
    {
        WorkersElements = new List<WorkerTableModel>()
        {
            new WorkerTableModel() { WorkerId = "11", WorkerName = "Worker First", WorkerAccessCode = "A", DateAdded = "01.01.2023" },
            new WorkerTableModel() { WorkerId = "12", WorkerName = "Worker Second", WorkerAccessCode = "B", DateAdded = "01.02.2023" },
            new WorkerTableModel() { WorkerId = "13", WorkerName = "Worker Third", WorkerAccessCode = "C", DateAdded = "01.03.2023" },
            new WorkerTableModel() { WorkerId = "14", WorkerName = "Worker Four", WorkerAccessCode = "D", DateAdded = "01.04.2023" },
            new WorkerTableModel() { WorkerId = "15", WorkerName = "Worker Five", WorkerAccessCode = "E", DateAdded = "01.05.2023" },
            new WorkerTableModel() { WorkerId = "21", WorkerName = "Worker First", WorkerAccessCode = "A", DateAdded = "01.01.2023" },
            new WorkerTableModel() { WorkerId = "22", WorkerName = "Worker Second", WorkerAccessCode = "B", DateAdded = "01.02.2023" },
            new WorkerTableModel() { WorkerId = "23", WorkerName = "Worker Third", WorkerAccessCode = "C", DateAdded = "01.03.2023" },
            new WorkerTableModel() { WorkerId = "24", WorkerName = "Worker Four", WorkerAccessCode = "D", DateAdded = "01.04.2023" },
            new WorkerTableModel() { WorkerId = "25", WorkerName = "Worker Five", WorkerAccessCode = "E", DateAdded = "01.05.2023" },
            new WorkerTableModel() { WorkerId = "31", WorkerName = "Worker First", WorkerAccessCode = "A", DateAdded = "01.01.2023" },
            new WorkerTableModel() { WorkerId = "32", WorkerName = "Worker Second", WorkerAccessCode = "B", DateAdded = "01.02.2023" },
            new WorkerTableModel() { WorkerId = "33", WorkerName = "Worker Third", WorkerAccessCode = "C", DateAdded = "01.03.2023" },
            new WorkerTableModel() { WorkerId = "34", WorkerName = "Worker Four", WorkerAccessCode = "D", DateAdded = "01.04.2023" },
            new WorkerTableModel() { WorkerId = "35", WorkerName = "Worker Five", WorkerAccessCode = "E", DateAdded = "01.05.2023" },
            new WorkerTableModel() { WorkerId = "41", WorkerName = "Worker First", WorkerAccessCode = "A", DateAdded = "01.01.2023" },
            new WorkerTableModel() { WorkerId = "42", WorkerName = "Worker Second", WorkerAccessCode = "B", DateAdded = "01.02.2023" },
            new WorkerTableModel() { WorkerId = "43", WorkerName = "Worker Third", WorkerAccessCode = "C", DateAdded = "01.03.2023" },
            new WorkerTableModel() { WorkerId = "44", WorkerName = "Worker Four", WorkerAccessCode = "D", DateAdded = "01.04.2023" },
            new WorkerTableModel() { WorkerId = "45", WorkerName = "Worker Five", WorkerAccessCode = "E", DateAdded = "01.05.2023" },
        };
        JobsElements = new List<JobTableModel>()
        {
            new JobTableModel() { JobId = "1", JobTitle = "Job First", DateAdded = "01.01.2023" },
            new JobTableModel() { JobId = "2", JobTitle = "Job Second", DateAdded = "01.02.2023" },
            new JobTableModel() { JobId = "3", JobTitle = "Job Third", DateAdded = "01.03.2023" },
            new JobTableModel() { JobId = "4", JobTitle = "Job Four", DateAdded = "01.04.2023" },
            new JobTableModel() { JobId = "5", JobTitle = "Job Five", DateAdded = "01.05.2023" },
        };
        BuildingsElements = new List<BuildingTableModel>()
        {
            new BuildingTableModel() { BuildingId = "1", BuildingTitle = "Building First", DateAdded = "01.01.2023" },
            new BuildingTableModel() { BuildingId = "2", BuildingTitle = "Building Second", DateAdded = "01.02.2023" },
            new BuildingTableModel() { BuildingId = "3", BuildingTitle = "Building Third", DateAdded = "01.03.2023" },
            new BuildingTableModel() { BuildingId = "4", BuildingTitle = "Building Four", DateAdded = "01.04.2023" },
            new BuildingTableModel() { BuildingId = "5", BuildingTitle = "Building Five", DateAdded = "01.05.2023" },
        };
        StateHasChanged();
    }
   
}
